int partition(int array[10], int begin, int end)
{
    int a = array[begin];
    int index = begin;
    int tmp;
    int pp = begin;
    begin = begin + 1;
    while(begin < end)
    {
        if(array[begin] < a)
        {
	        index = index + 1;
            tmp = array[begin];
            array[begin] = array[index];
            array[index] = tmp;
        }
        begin = begin + 1;
    }
    array[pp] = array[index];
    array[index] = a;
    return index;  
}
int quicksort(int array1[10], int begin1, int end1)
{
	int mid , t;
    if(begin1 + 1 >= end1)
        return 0;
    mid = partition(array1, begin1, end1);
    t = quicksort(array1, begin1, mid);
    t = quicksort(array1, mid + 1, end1);
    return 0;
}

int main()
{
    int p[10];
    int i = 0, j;
    p[0] = 8;
    p[1] = 9;
    p[2] = 6;
    p[3] = 0;
    p[4] = 2;
    p[5] = 5;
    p[6] = 1;
    p[7] = 7;
    p[8] = 3;
    p[9] = 4;
    j = quicksort(p, 0, 10);
    while(i < 10)
    {
        write(p[i]);
        i = i + 1;
    }
    return 0;
}
